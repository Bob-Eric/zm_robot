#!/usr/bin/env python
PACKAGE = "zm_robot_move_relative"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("base_frame", str_t, 0, "The moving base frame, which is the center of rotation", "base_link")
gen.add("fixed_frame", str_t, 0, "The moving fixed frame, which is the center of rotation", "odom")

gen.add("max_vel_x", double_t, 0, "Maximum x velocity of the robot in meters/sec", 1.0, 0)
gen.add("min_vel_x", double_t, 0, "Minimum x velocity of the robot in meters/sec", 0.02, 0)
 
gen.add("max_vel_y", double_t, 0, "Maximum y velocity of the robot in meters/sec", 1.0, 0)
gen.add("min_vel_y", double_t, 0, "Minimum y velocity of the robot in meters/sec", 0.02, 0)
 
gen.add("max_vel_theta", double_t, 0, "Maximum angular velocity of the robot in radians/sec",  0.8, 0)
gen.add("min_vel_theta", double_t, 0, "Minimum angular velocity of the robot in radians/sec", 0.02, 0)

gen.add("acceleration_x", double_t, 0, "Deceleration limit of the robot stopping at goal for x direction in meters/sec^2", 1.0, 0)
gen.add("acceleration_y", double_t, 0, "Deceleration limit of the robot stopping at goal for y direction in meters/sec^2", 1.0, 0)
gen.add("acceleration_theta", double_t, 0, "Deceleration limit of the robot rotation in radians/sec^2", 1.0, 0)

gen.add("linear_tolerance", double_t, 0, "Allowed Euclidean distance of reference frame to goal in meters", 0.05, 0)
gen.add("angular_tolerance", double_t, 0, "Allowed orientation error of reference frame to goal in radians", 0.05, 0)

gen.add("rate", double_t, 0, "Loop rate in Hz", 20.0, 0.001)
gen.add("timeout", double_t, 0, "Allowed time to wait for transforms in seconds", 0.5, 0)

exit(gen.generate(PACKAGE, "zm_robot_move_relative", "zm_robot_MoveRelative"))